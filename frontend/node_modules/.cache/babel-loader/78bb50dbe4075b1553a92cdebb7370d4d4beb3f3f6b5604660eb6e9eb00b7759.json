{"ast":null,"code":"var _jsxFileName = \"/Users/akshaj/Ai-code-reviewer/frontend/src/components/BookmarkManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { codeforcesAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookmarkManager = () => {\n  _s();\n  const [bookmarks, setBookmarks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchBookmarks();\n  }, []);\n  const fetchBookmarks = async () => {\n    try {\n      const response = await codeforcesAPI.getBookmarks();\n      setBookmarks(response.data.bookmarks || []);\n    } catch (error) {\n      console.error('Failed to fetch bookmarks:', error);\n    }\n    setLoading(false);\n  };\n  const handleRemoveBookmark = async (contestId, problemIndex) => {\n    var _getUser;\n    const deletingBookmarkId = `${contestId}-${problemIndex}`;\n    setDeletingId(deletingBookmarkId);\n    setError('');\n\n    // DEBUG: Log what we're about to send\n    console.log(\"Attempting to delete bookmark:\", {\n      contestId,\n      problemIndex,\n      userId: (_getUser = getUser()) === null || _getUser === void 0 ? void 0 : _getUser._id\n    });\n    try {\n      // DEBUG: Capture the exact API response\n      const response = await codeforcesAPI.removeBookmark(contestId, problemIndex);\n      console.log(\"Delete API Response:\", response.data); // Log the success message\n\n      setBookmarks(bookmarks.filter(b => !(b.contestId === contestId && b.problemIndex === problemIndex)));\n    } catch (error) {\n      var _error$response, _error$response2, _error$config, _error$response3, _error$response4;\n      // GREATLY ENHANCED ERROR LOGGING\n      console.error('DELETE Request Failed:');\n      console.error('- Error Object:', error);\n      console.error('- HTTP Status:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status);\n      console.error('- Server Message:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n      console.error('- Request URL:', (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url);\n      if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n        setError('Your session expired. Please log in again.');\n      } else if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 404) {\n        setError('Bookmark was already removed.');\n        setBookmarks(bookmarks.filter(b => !(b.contestId === contestId && b.problemIndex === problemIndex)));\n      } else {\n        var _error$response5, _error$response5$data;\n        // Show the actual server error message if it exists\n        setError(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || 'Failed to remove bookmark. Please try again.');\n      }\n    } finally {\n      setDeletingId(null);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading bookmarks...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bookmark-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Bookmarked Problems\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), bookmarks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No bookmarks yet. Bookmark problems to see them here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookmarks-list\",\n      children: bookmarks.map(bookmark => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookmark-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookmark-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: bookmark.problemName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", bookmark.problemRating, \" \\u2022 \", bookmark.problemTags.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookmark-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://codeforces.com/problemset/problem/${bookmark.contestId}/${bookmark.problemIndex}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"btn btn-secondary\",\n            children: \"Solve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeBookmark(bookmark.contestId, bookmark.problemIndex),\n            className: \"btn btn-danger\",\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, `${bookmark.contestId}-${bookmark.problemIndex}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(BookmarkManager, \"RkeKPusm9QFlx9l3bKwYgL3DYR0=\");\n_c = BookmarkManager;\nexport default BookmarkManager;\nvar _c;\n$RefreshReg$(_c, \"BookmarkManager\");","map":{"version":3,"names":["React","useState","useEffect","codeforcesAPI","jsxDEV","_jsxDEV","BookmarkManager","_s","bookmarks","setBookmarks","loading","setLoading","fetchBookmarks","response","getBookmarks","data","error","console","handleRemoveBookmark","contestId","problemIndex","_getUser","deletingBookmarkId","setDeletingId","setError","log","userId","getUser","_id","removeBookmark","filter","b","_error$response","_error$response2","_error$config","_error$response3","_error$response4","status","config","url","_error$response5","_error$response5$data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","bookmark","problemName","problemRating","problemTags","join","href","target","rel","onClick","_c","$RefreshReg$"],"sources":["/Users/akshaj/Ai-code-reviewer/frontend/src/components/BookmarkManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { codeforcesAPI } from '../services/api';\n\nconst BookmarkManager = () => {\n  const [bookmarks, setBookmarks] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchBookmarks();\n  }, []);\n\n  const fetchBookmarks = async () => {\n    try {\n      const response = await codeforcesAPI.getBookmarks();\n      setBookmarks(response.data.bookmarks || []);\n    } catch (error) {\n      console.error('Failed to fetch bookmarks:', error);\n    }\n    setLoading(false);\n  };\n\n  const handleRemoveBookmark = async (contestId, problemIndex) => {\n  const deletingBookmarkId = `${contestId}-${problemIndex}`;\n  setDeletingId(deletingBookmarkId);\n  setError('');\n\n  // DEBUG: Log what we're about to send\n  console.log(\"Attempting to delete bookmark:\", { contestId, problemIndex, userId: getUser()?._id });\n\n  try {\n    // DEBUG: Capture the exact API response\n    const response = await codeforcesAPI.removeBookmark(contestId, problemIndex);\n    console.log(\"Delete API Response:\", response.data); // Log the success message\n\n    setBookmarks(bookmarks.filter(b => \n      !(b.contestId === contestId && b.problemIndex === problemIndex)\n    ));\n  } catch (error) {\n    // GREATLY ENHANCED ERROR LOGGING\n    console.error('DELETE Request Failed:');\n    console.error('- Error Object:', error);\n    console.error('- HTTP Status:', error.response?.status);\n    console.error('- Server Message:', error.response?.data);\n    console.error('- Request URL:', error.config?.url);\n\n    if (error.response?.status === 401) {\n      setError('Your session expired. Please log in again.');\n    } else if (error.response?.status === 404) {\n      setError('Bookmark was already removed.');\n      setBookmarks(bookmarks.filter(b => \n        !(b.contestId === contestId && b.problemIndex === problemIndex)\n      ));\n    } else {\n      // Show the actual server error message if it exists\n      setError(error.response?.data?.error || 'Failed to remove bookmark. Please try again.');\n    }\n  } finally {\n    setDeletingId(null);\n  }\n};\n\n  if (loading) return <div>Loading bookmarks...</div>;\n\n  return (\n    <div className=\"bookmark-manager\">\n      <h3>Bookmarked Problems</h3>\n      \n      {bookmarks.length === 0 ? (\n        <p>No bookmarks yet. Bookmark problems to see them here.</p>\n      ) : (\n        <div className=\"bookmarks-list\">\n          {bookmarks.map(bookmark => (\n            <div key={`${bookmark.contestId}-${bookmark.problemIndex}`} className=\"bookmark-item\">\n              <div className=\"bookmark-info\">\n                <h4>{bookmark.problemName}</h4>\n                <p>Rating: {bookmark.problemRating} • {bookmark.problemTags.join(', ')}</p>\n              </div>\n              <div className=\"bookmark-actions\">\n                <a\n                  href={`https://codeforces.com/problemset/problem/${bookmark.contestId}/${bookmark.problemIndex}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"btn btn-secondary\"\n                >\n                  Solve\n                </a>\n                <button\n                  onClick={() => removeBookmark(bookmark.contestId, bookmark.problemIndex)}\n                  className=\"btn btn-danger\"\n                >\n                  Remove\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BookmarkManager;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdU,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,aAAa,CAACW,YAAY,CAAC,CAAC;MACnDL,YAAY,CAACI,QAAQ,CAACE,IAAI,CAACP,SAAS,IAAI,EAAE,CAAC;IAC7C,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;IACAL,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMO,oBAAoB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,YAAY,KAAK;IAAA,IAAAC,QAAA;IAChE,MAAMC,kBAAkB,GAAG,GAAGH,SAAS,IAAIC,YAAY,EAAE;IACzDG,aAAa,CAACD,kBAAkB,CAAC;IACjCE,QAAQ,CAAC,EAAE,CAAC;;IAEZ;IACAP,OAAO,CAACQ,GAAG,CAAC,gCAAgC,EAAE;MAAEN,SAAS;MAAEC,YAAY;MAAEM,MAAM,GAAAL,QAAA,GAAEM,OAAO,CAAC,CAAC,cAAAN,QAAA,uBAATA,QAAA,CAAWO;IAAI,CAAC,CAAC;IAElG,IAAI;MACF;MACA,MAAMf,QAAQ,GAAG,MAAMV,aAAa,CAAC0B,cAAc,CAACV,SAAS,EAAEC,YAAY,CAAC;MAC5EH,OAAO,CAACQ,GAAG,CAAC,sBAAsB,EAAEZ,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;;MAEpDN,YAAY,CAACD,SAAS,CAACsB,MAAM,CAACC,CAAC,IAC7B,EAAEA,CAAC,CAACZ,SAAS,KAAKA,SAAS,IAAIY,CAAC,CAACX,YAAY,KAAKA,YAAY,CAChE,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE;MAAA,IAAAgB,eAAA,EAAAC,gBAAA,EAAAC,aAAA,EAAAC,gBAAA,EAAAC,gBAAA;MACd;MACAnB,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAC;MACvCC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvCC,OAAO,CAACD,KAAK,CAAC,gBAAgB,GAAAgB,eAAA,GAAEhB,KAAK,CAACH,QAAQ,cAAAmB,eAAA,uBAAdA,eAAA,CAAgBK,MAAM,CAAC;MACvDpB,OAAO,CAACD,KAAK,CAAC,mBAAmB,GAAAiB,gBAAA,GAAEjB,KAAK,CAACH,QAAQ,cAAAoB,gBAAA,uBAAdA,gBAAA,CAAgBlB,IAAI,CAAC;MACxDE,OAAO,CAACD,KAAK,CAAC,gBAAgB,GAAAkB,aAAA,GAAElB,KAAK,CAACsB,MAAM,cAAAJ,aAAA,uBAAZA,aAAA,CAAcK,GAAG,CAAC;MAElD,IAAI,EAAAJ,gBAAA,GAAAnB,KAAK,CAACH,QAAQ,cAAAsB,gBAAA,uBAAdA,gBAAA,CAAgBE,MAAM,MAAK,GAAG,EAAE;QAClCb,QAAQ,CAAC,4CAA4C,CAAC;MACxD,CAAC,MAAM,IAAI,EAAAY,gBAAA,GAAApB,KAAK,CAACH,QAAQ,cAAAuB,gBAAA,uBAAdA,gBAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;QACzCb,QAAQ,CAAC,+BAA+B,CAAC;QACzCf,YAAY,CAACD,SAAS,CAACsB,MAAM,CAACC,CAAC,IAC7B,EAAEA,CAAC,CAACZ,SAAS,KAAKA,SAAS,IAAIY,CAAC,CAACX,YAAY,KAAKA,YAAY,CAChE,CAAC,CAAC;MACJ,CAAC,MAAM;QAAA,IAAAoB,gBAAA,EAAAC,qBAAA;QACL;QACAjB,QAAQ,CAAC,EAAAgB,gBAAA,GAAAxB,KAAK,CAACH,QAAQ,cAAA2B,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBzB,IAAI,cAAA0B,qBAAA,uBAApBA,qBAAA,CAAsBzB,KAAK,KAAI,8CAA8C,CAAC;MACzF;IACF,CAAC,SAAS;MACRO,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC;EAEC,IAAIb,OAAO,EAAE,oBAAOL,OAAA;IAAAqC,QAAA,EAAK;EAAoB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEnD,oBACEzC,OAAA;IAAK0C,SAAS,EAAC,kBAAkB;IAAAL,QAAA,gBAC/BrC,OAAA;MAAAqC,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE3BtC,SAAS,CAACwC,MAAM,KAAK,CAAC,gBACrB3C,OAAA;MAAAqC,QAAA,EAAG;IAAqD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE5DzC,OAAA;MAAK0C,SAAS,EAAC,gBAAgB;MAAAL,QAAA,EAC5BlC,SAAS,CAACyC,GAAG,CAACC,QAAQ,iBACrB7C,OAAA;QAA4D0C,SAAS,EAAC,eAAe;QAAAL,QAAA,gBACnFrC,OAAA;UAAK0C,SAAS,EAAC,eAAe;UAAAL,QAAA,gBAC5BrC,OAAA;YAAAqC,QAAA,EAAKQ,QAAQ,CAACC;UAAW;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC/BzC,OAAA;YAAAqC,QAAA,GAAG,UAAQ,EAACQ,QAAQ,CAACE,aAAa,EAAC,UAAG,EAACF,QAAQ,CAACG,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC,eACNzC,OAAA;UAAK0C,SAAS,EAAC,kBAAkB;UAAAL,QAAA,gBAC/BrC,OAAA;YACEkD,IAAI,EAAE,6CAA6CL,QAAQ,CAAC/B,SAAS,IAAI+B,QAAQ,CAAC9B,YAAY,EAAG;YACjGoC,MAAM,EAAC,QAAQ;YACfC,GAAG,EAAC,qBAAqB;YACzBV,SAAS,EAAC,mBAAmB;YAAAL,QAAA,EAC9B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACJzC,OAAA;YACEqD,OAAO,EAAEA,CAAA,KAAM7B,cAAc,CAACqB,QAAQ,CAAC/B,SAAS,EAAE+B,QAAQ,CAAC9B,YAAY,CAAE;YACzE2B,SAAS,EAAC,gBAAgB;YAAAL,QAAA,EAC3B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA,GApBE,GAAGI,QAAQ,CAAC/B,SAAS,IAAI+B,QAAQ,CAAC9B,YAAY,EAAE;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAqBrD,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvC,EAAA,CAhGID,eAAe;AAAAqD,EAAA,GAAfrD,eAAe;AAkGrB,eAAeA,eAAe;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}