{"ast":null,"code":"var _jsxFileName = \"/Users/akshaj/Ai-code-reviewer/frontend/src/pages/ProblemSolve.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport CodeEditor from '../components/CodeEditor';\nimport ProblemDisplay from '../components/ProblemDisplay';\nimport ReviewResults from '../components/ReviewResults';\nimport { codeforcesAPI } from '../services/api';\nimport { getUser } from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProblemSolve = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const [problem, setProblem] = useState(null);\n  const [review, setReview] = useState(null);\n  const [userCode, setUserCode] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [timeTaken, setTimeTaken] = useState(0);\n  const [solved, setSolved] = useState(false);\n  const [language, setLanguage] = useState('python');\n  const [submitting, setSubmitting] = useState(false);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [savedAttempt, setSavedAttempt] = useState(null);\n  const [showBookmarkOptions, setShowBookmarkOptions] = useState(false);\n  const timerRef = useRef(null);\n  const startTimeRef = useRef(null);\n  const pausedTimeRef = useRef(0);\n  const user = getUser();\n  useEffect(() => {\n    const fetchProblem = async () => {\n      const contestId = searchParams.get('contestId');\n      const problemIndex = searchParams.get('index');\n      const problemName = searchParams.get('problem');\n      const rating = searchParams.get('rating');\n      const tags = searchParams.get('tags');\n      if (contestId && problemIndex) {\n        setLoading(true);\n        try {\n          setProblem({\n            contestId,\n            index: problemIndex,\n            name: problemName || `Problem ${contestId}${problemIndex}`,\n            tags: tags ? tags.split(',') : ['algorithm', 'coding'],\n            rating: parseInt(rating) || 1500\n          });\n        } catch (error) {\n          console.error('Failed to fetch problem:', error);\n        }\n        setLoading(false);\n      }\n    };\n    fetchProblem();\n    startTimer();\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [searchParams]);\n  const startTimer = () => {\n    if (!isTimerRunning) {\n      startTimeRef.current = Date.now() - pausedTimeRef.current;\n      setIsTimerRunning(true);\n      timerRef.current = setInterval(() => {\n        const elapsedSeconds = Math.floor((Date.now() - startTimeRef.current) / 1000);\n        setTimeTaken(elapsedSeconds);\n      }, 1000);\n    }\n  };\n  const stopTimer = () => {\n    if (isTimerRunning && timerRef.current) {\n      clearInterval(timerRef.current);\n      setIsTimerRunning(false);\n      pausedTimeRef.current = timeTaken * 1000;\n    }\n  };\n  const resetTimer = () => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    setTimeTaken(0);\n    pausedTimeRef.current = 0;\n    setIsTimerRunning(false);\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const handleReviewComplete = async (reviewText, code) => {\n    stopTimer();\n    setReview(reviewText);\n    setUserCode(code);\n    if (problem) {\n      await saveProblemAttempt(code, reviewText);\n    }\n  };\n  const saveProblemAttempt = async (code, reviewFeedback = '') => {\n    if (!problem) return;\n    setSubmitting(true);\n    try {\n      const response = await codeforcesAPI.saveAttempt({\n        contestId: problem.contestId,\n        problemIndex: problem.index,\n        problemName: problem.name,\n        problemTags: problem.tags,\n        problemRating: problem.rating,\n        solved: solved,\n        timeTaken: timeTaken,\n        code: code,\n        language: language,\n        reviewFeedback: reviewFeedback\n      });\n      if (response.data.success) {\n        setSavedAttempt(response.data.attempt);\n        setShowBookmarkOptions(true);\n      }\n    } catch (error) {\n      console.error('Failed to save attempt:', error);\n    }\n    setSubmitting(false);\n  };\n  const handleSubmitToCodeforces = () => {\n    if (problem && userCode) {\n      // Open Codeforces submit page in new tab\n      const submitUrl = `https://codeforces.com/problemset/submit`;\n      window.open(submitUrl, '_blank');\n\n      // You could also try to auto-fill form data (though this is limited by browser security)\n      alert(`Submit your code on Codeforces for problem ${problem.contestId}${problem.index}`);\n    } else {\n      alert('Please write some code first');\n    }\n  };\n  const handleBookmark = async () => {\n    try {\n      await codeforcesAPI.bookmarkProblem({\n        contestId: problem.contestId,\n        problemIndex: problem.index,\n        problemName: problem.name,\n        problemTags: problem.tags,\n        problemRating: problem.rating\n      });\n      alert('Problem bookmarked successfully!');\n    } catch (error) {\n      console.error('Failed to bookmark:', error);\n    }\n  };\n  const handleSaveWithoutReview = async () => {\n    if (!userCode) {\n      alert('Please write some code first');\n      return;\n    }\n    stopTimer();\n    await saveProblemAttempt(userCode);\n  };\n  const handleTryAnother = () => {\n    setReview(null);\n    setUserCode('');\n    setSavedAttempt(null);\n    setShowBookmarkOptions(false);\n    resetTimer();\n    startTimer();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading problem...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"problem-solve-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solve-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-user\",\n        children: [(user === null || user === void 0 ? void 0 : user.avatar) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.avatar,\n          alt: user.name,\n          className: \"user-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Solve Coding Problem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Write your solution and get instant AI feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timer-label\",\n            children: \"Time Elapsed:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timer-value\",\n            children: formatTime(timeTaken)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-controls\",\n          children: [isTimerRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: stopTimer,\n            className: \"btn btn-secondary\",\n            children: \"\\u23F8\\uFE0F Pause Timer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startTimer,\n            className: \"btn btn-primary\",\n            children: \"\\u25B6\\uFE0F Resume Timer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetTimer,\n            className: \"btn btn-secondary\",\n            children: \"\\uD83D\\uDD04 Reset Timer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solve-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem-column\",\n        children: [/*#__PURE__*/_jsxDEV(ProblemDisplay, {\n          problem: problem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"problem-actions\",\n          children: [problem && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://codeforces.com/problemset/problem/${problem.contestId}/${problem.index}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"btn btn-secondary\",\n            children: \"\\uD83D\\uDCD6 View Problem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmitToCodeforces,\n            className: \"btn btn-primary\",\n            disabled: !userCode,\n            children: \"\\uD83D\\uDE80 Submit to Codeforces\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), showBookmarkOptions && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleBookmark,\n            className: \"btn btn-secondary\",\n            children: \"\\u2B50 Bookmark Problem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-selection\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Programming Language:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: language,\n            onChange: e => setLanguage(e.target.value),\n            className: \"language-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"python\",\n              children: \"Python\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cpp\",\n              children: \"C++\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"java\",\n              children: \"Java\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"javascript\",\n              children: \"JavaScript\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"c\",\n              children: \"C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"solved-checkbox\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: solved,\n              onChange: e => setSolved(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), \"I solved this problem\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-column\",\n        children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n          problem: problem,\n          onReviewComplete: handleReviewComplete,\n          onLanguageChange: setLanguage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), review && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-column\",\n        children: /*#__PURE__*/_jsxDEV(ReviewResults, {\n          review: review,\n          code: userCode,\n          problem: problem,\n          onTryAnother: handleTryAnother\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_s(ProblemSolve, \"KbZj5Jk7DzWxD74Zdpf+S4BSbms=\", false, function () {\n  return [useSearchParams];\n});\n_c = ProblemSolve;\nexport default ProblemSolve;\nvar _c;\n$RefreshReg$(_c, \"ProblemSolve\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSearchParams","CodeEditor","ProblemDisplay","ReviewResults","codeforcesAPI","getUser","jsxDEV","_jsxDEV","ProblemSolve","_s","searchParams","problem","setProblem","review","setReview","userCode","setUserCode","loading","setLoading","timeTaken","setTimeTaken","solved","setSolved","language","setLanguage","submitting","setSubmitting","isTimerRunning","setIsTimerRunning","savedAttempt","setSavedAttempt","showBookmarkOptions","setShowBookmarkOptions","timerRef","startTimeRef","pausedTimeRef","user","fetchProblem","contestId","get","problemIndex","problemName","rating","tags","index","name","split","parseInt","error","console","startTimer","current","clearInterval","Date","now","setInterval","elapsedSeconds","Math","floor","stopTimer","resetTimer","formatTime","seconds","mins","secs","toString","padStart","handleReviewComplete","reviewText","code","saveProblemAttempt","reviewFeedback","response","saveAttempt","problemTags","problemRating","data","success","attempt","handleSubmitToCodeforces","submitUrl","window","open","alert","handleBookmark","bookmarkProblem","handleSaveWithoutReview","handleTryAnother","className","children","fileName","_jsxFileName","lineNumber","columnNumber","avatar","src","alt","onClick","href","target","rel","disabled","value","onChange","e","type","checked","onReviewComplete","onLanguageChange","onTryAnother","_c","$RefreshReg$"],"sources":["/Users/akshaj/Ai-code-reviewer/frontend/src/pages/ProblemSolve.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport CodeEditor from '../components/CodeEditor';\nimport ProblemDisplay from '../components/ProblemDisplay';\nimport ReviewResults from '../components/ReviewResults';\nimport { codeforcesAPI } from '../services/api';\nimport { getUser } from '../services/auth';\n\nconst ProblemSolve = () => {\n  const [searchParams] = useSearchParams();\n  const [problem, setProblem] = useState(null);\n  const [review, setReview] = useState(null);\n  const [userCode, setUserCode] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [timeTaken, setTimeTaken] = useState(0);\n  const [solved, setSolved] = useState(false);\n  const [language, setLanguage] = useState('python');\n  const [submitting, setSubmitting] = useState(false);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [savedAttempt, setSavedAttempt] = useState(null);\n  const [showBookmarkOptions, setShowBookmarkOptions] = useState(false);\n  const timerRef = useRef(null);\n  const startTimeRef = useRef(null);\n  const pausedTimeRef = useRef(0);\n  const user = getUser();\n\n  useEffect(() => {\n    const fetchProblem = async () => {\n      const contestId = searchParams.get('contestId');\n      const problemIndex = searchParams.get('index');\n      const problemName = searchParams.get('problem');\n      const rating = searchParams.get('rating');\n      const tags = searchParams.get('tags');\n\n      if (contestId && problemIndex) {\n        setLoading(true);\n        try {\n          setProblem({\n            contestId,\n            index: problemIndex,\n            name: problemName || `Problem ${contestId}${problemIndex}`,\n            tags: tags ? tags.split(',') : ['algorithm', 'coding'],\n            rating: parseInt(rating) || 1500\n          });\n        } catch (error) {\n          console.error('Failed to fetch problem:', error);\n        }\n        setLoading(false);\n      }\n    };\n\n    fetchProblem();\n    startTimer();\n\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [searchParams]);\n\n  const startTimer = () => {\n    if (!isTimerRunning) {\n      startTimeRef.current = Date.now() - pausedTimeRef.current;\n      setIsTimerRunning(true);\n      \n      timerRef.current = setInterval(() => {\n        const elapsedSeconds = Math.floor((Date.now() - startTimeRef.current) / 1000);\n        setTimeTaken(elapsedSeconds);\n      }, 1000);\n    }\n  };\n\n  const stopTimer = () => {\n    if (isTimerRunning && timerRef.current) {\n      clearInterval(timerRef.current);\n      setIsTimerRunning(false);\n      pausedTimeRef.current = timeTaken * 1000;\n    }\n  };\n\n  const resetTimer = () => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    setTimeTaken(0);\n    pausedTimeRef.current = 0;\n    setIsTimerRunning(false);\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const handleReviewComplete = async (reviewText, code) => {\n    stopTimer();\n    setReview(reviewText);\n    setUserCode(code);\n    \n    if (problem) {\n      await saveProblemAttempt(code, reviewText);\n    }\n  };\n\n  const saveProblemAttempt = async (code, reviewFeedback = '') => {\n    if (!problem) return;\n\n    setSubmitting(true);\n    try {\n      const response = await codeforcesAPI.saveAttempt({\n        contestId: problem.contestId,\n        problemIndex: problem.index,\n        problemName: problem.name,\n        problemTags: problem.tags,\n        problemRating: problem.rating,\n        solved: solved,\n        timeTaken: timeTaken,\n        code: code,\n        language: language,\n        reviewFeedback: reviewFeedback\n      });\n      \n      if (response.data.success) {\n        setSavedAttempt(response.data.attempt);\n        setShowBookmarkOptions(true);\n      }\n    } catch (error) {\n      console.error('Failed to save attempt:', error);\n    }\n    setSubmitting(false);\n  };\n\n  const handleSubmitToCodeforces = () => {\n    if (problem && userCode) {\n      // Open Codeforces submit page in new tab\n      const submitUrl = `https://codeforces.com/problemset/submit`;\n      window.open(submitUrl, '_blank');\n      \n      // You could also try to auto-fill form data (though this is limited by browser security)\n      alert(`Submit your code on Codeforces for problem ${problem.contestId}${problem.index}`);\n    } else {\n      alert('Please write some code first');\n    }\n  };\n\n  const handleBookmark = async () => {\n    try {\n      await codeforcesAPI.bookmarkProblem({\n        contestId: problem.contestId,\n        problemIndex: problem.index,\n        problemName: problem.name,\n        problemTags: problem.tags,\n        problemRating: problem.rating\n      });\n      alert('Problem bookmarked successfully!');\n    } catch (error) {\n      console.error('Failed to bookmark:', error);\n    }\n  };\n\n  const handleSaveWithoutReview = async () => {\n    if (!userCode) {\n      alert('Please write some code first');\n      return;\n    }\n    \n    stopTimer();\n    await saveProblemAttempt(userCode);\n  };\n\n  const handleTryAnother = () => {\n    setReview(null);\n    setUserCode('');\n    setSavedAttempt(null);\n    setShowBookmarkOptions(false);\n    resetTimer();\n    startTimer();\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading problem...</div>;\n  }\n\n  return (\n    <div className=\"problem-solve-page\">\n      <div className=\"solve-header\">\n        <div className=\"header-user\">\n          {user?.avatar && (\n            <img src={user.avatar} alt={user.name} className=\"user-avatar\" />\n          )}\n          <div>\n            <h1>Solve Coding Problem</h1>\n            <p>Write your solution and get instant AI feedback</p>\n          </div>\n        </div>\n        \n        <div className=\"timer-section\">\n          <div className=\"timer-display\">\n            <span className=\"timer-label\">Time Elapsed:</span>\n            <span className=\"timer-value\">{formatTime(timeTaken)}</span>\n          </div>\n          <div className=\"timer-controls\">\n            {isTimerRunning ? (\n              <button onClick={stopTimer} className=\"btn btn-secondary\">\n                ⏸️ Pause Timer\n              </button>\n            ) : (\n              <button onClick={startTimer} className=\"btn btn-primary\">\n                ▶️ Resume Timer\n              </button>\n            )}\n            <button onClick={resetTimer} className=\"btn btn-secondary\">\n              🔄 Reset Timer\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"solve-content\">\n        <div className=\"problem-column\">\n          <ProblemDisplay problem={problem} />\n          \n          {/* Problem Actions */}\n          <div className=\"problem-actions\">\n            {problem && (\n              <a\n                href={`https://codeforces.com/problemset/problem/${problem.contestId}/${problem.index}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"btn btn-secondary\"\n              >\n                📖 View Problem\n              </a>\n            )}\n            \n            <button \n              onClick={handleSubmitToCodeforces}\n              className=\"btn btn-primary\"\n              disabled={!userCode}\n            >\n              🚀 Submit to Codeforces\n            </button>\n\n            {showBookmarkOptions && (\n              <button onClick={handleBookmark} className=\"btn btn-secondary\">\n                ⭐ Bookmark Problem\n              </button>\n            )}\n          </div>\n\n          {/* Language Selection */}\n          <div className=\"language-selection\">\n            <h4>Programming Language:</h4>\n            <select\n              value={language}\n              onChange={(e) => setLanguage(e.target.value)}\n              className=\"language-select\"\n            >\n              <option value=\"python\">Python</option>\n              <option value=\"cpp\">C++</option>\n              <option value=\"java\">Java</option>\n              <option value=\"javascript\">JavaScript</option>\n              <option value=\"c\">C</option>\n            </select>\n          </div>\n\n          {/* Solved Checkbox */}\n          <div className=\"solved-checkbox\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={solved}\n                onChange={(e) => setSolved(e.target.checked)}\n              />\n              I solved this problem\n            </label>\n          </div>\n        </div>\n\n        <div className=\"editor-column\">\n          <CodeEditor \n            problem={problem}\n            onReviewComplete={handleReviewComplete}\n            onLanguageChange={setLanguage}\n          />\n        </div>\n\n        {review && (\n          <div className=\"review-column\">\n            <ReviewResults \n              review={review}\n              code={userCode}\n              problem={problem}\n              onTryAnother={handleTryAnother}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProblemSolve;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,eAAe,QAAQ,kBAAkB;AAClD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,CAAC,GAAGV,eAAe,CAAC,CAAC;EACxC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACwB,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAAC0B,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAAC,QAAQ,CAAC;EAClD,MAAM,CAAC4B,UAAU,EAAEC,aAAa,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC8B,cAAc,EAAEC,iBAAiB,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACgC,YAAY,EAAEC,eAAe,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAMoC,QAAQ,GAAGlC,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMmC,YAAY,GAAGnC,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMoC,aAAa,GAAGpC,MAAM,CAAC,CAAC,CAAC;EAC/B,MAAMqC,IAAI,GAAG/B,OAAO,CAAC,CAAC;EAEtBP,SAAS,CAAC,MAAM;IACd,MAAMuC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,SAAS,GAAG5B,YAAY,CAAC6B,GAAG,CAAC,WAAW,CAAC;MAC/C,MAAMC,YAAY,GAAG9B,YAAY,CAAC6B,GAAG,CAAC,OAAO,CAAC;MAC9C,MAAME,WAAW,GAAG/B,YAAY,CAAC6B,GAAG,CAAC,SAAS,CAAC;MAC/C,MAAMG,MAAM,GAAGhC,YAAY,CAAC6B,GAAG,CAAC,QAAQ,CAAC;MACzC,MAAMI,IAAI,GAAGjC,YAAY,CAAC6B,GAAG,CAAC,MAAM,CAAC;MAErC,IAAID,SAAS,IAAIE,YAAY,EAAE;QAC7BtB,UAAU,CAAC,IAAI,CAAC;QAChB,IAAI;UACFN,UAAU,CAAC;YACT0B,SAAS;YACTM,KAAK,EAAEJ,YAAY;YACnBK,IAAI,EAAEJ,WAAW,IAAI,WAAWH,SAAS,GAAGE,YAAY,EAAE;YAC1DG,IAAI,EAAEA,IAAI,GAAGA,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC;YACtDJ,MAAM,EAAEK,QAAQ,CAACL,MAAM,CAAC,IAAI;UAC9B,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAClD;QACA9B,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDmB,YAAY,CAAC,CAAC;IACda,UAAU,CAAC,CAAC;IAEZ,OAAO,MAAM;MACX,IAAIjB,QAAQ,CAACkB,OAAO,EAAE;QACpBC,aAAa,CAACnB,QAAQ,CAACkB,OAAO,CAAC;MACjC;IACF,CAAC;EACH,CAAC,EAAE,CAACzC,YAAY,CAAC,CAAC;EAElB,MAAMwC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACvB,cAAc,EAAE;MACnBO,YAAY,CAACiB,OAAO,GAAGE,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGnB,aAAa,CAACgB,OAAO;MACzDvB,iBAAiB,CAAC,IAAI,CAAC;MAEvBK,QAAQ,CAACkB,OAAO,GAAGI,WAAW,CAAC,MAAM;QACnC,MAAMC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACL,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGpB,YAAY,CAACiB,OAAO,IAAI,IAAI,CAAC;QAC7E/B,YAAY,CAACoC,cAAc,CAAC;MAC9B,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,MAAMG,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIhC,cAAc,IAAIM,QAAQ,CAACkB,OAAO,EAAE;MACtCC,aAAa,CAACnB,QAAQ,CAACkB,OAAO,CAAC;MAC/BvB,iBAAiB,CAAC,KAAK,CAAC;MACxBO,aAAa,CAACgB,OAAO,GAAGhC,SAAS,GAAG,IAAI;IAC1C;EACF,CAAC;EAED,MAAMyC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI3B,QAAQ,CAACkB,OAAO,EAAE;MACpBC,aAAa,CAACnB,QAAQ,CAACkB,OAAO,CAAC;IACjC;IACA/B,YAAY,CAAC,CAAC,CAAC;IACfe,aAAa,CAACgB,OAAO,GAAG,CAAC;IACzBvB,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMiC,UAAU,GAAIC,OAAO,IAAK;IAC9B,MAAMC,IAAI,GAAGN,IAAI,CAACC,KAAK,CAACI,OAAO,GAAG,EAAE,CAAC;IACrC,MAAME,IAAI,GAAGF,OAAO,GAAG,EAAE;IACzB,OAAO,GAAGC,IAAI,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EAClF,CAAC;EAED,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,UAAU,EAAEC,IAAI,KAAK;IACvDV,SAAS,CAAC,CAAC;IACX7C,SAAS,CAACsD,UAAU,CAAC;IACrBpD,WAAW,CAACqD,IAAI,CAAC;IAEjB,IAAI1D,OAAO,EAAE;MACX,MAAM2D,kBAAkB,CAACD,IAAI,EAAED,UAAU,CAAC;IAC5C;EACF,CAAC;EAED,MAAME,kBAAkB,GAAG,MAAAA,CAAOD,IAAI,EAAEE,cAAc,GAAG,EAAE,KAAK;IAC9D,IAAI,CAAC5D,OAAO,EAAE;IAEde,aAAa,CAAC,IAAI,CAAC;IACnB,IAAI;MACF,MAAM8C,QAAQ,GAAG,MAAMpE,aAAa,CAACqE,WAAW,CAAC;QAC/CnC,SAAS,EAAE3B,OAAO,CAAC2B,SAAS;QAC5BE,YAAY,EAAE7B,OAAO,CAACiC,KAAK;QAC3BH,WAAW,EAAE9B,OAAO,CAACkC,IAAI;QACzB6B,WAAW,EAAE/D,OAAO,CAACgC,IAAI;QACzBgC,aAAa,EAAEhE,OAAO,CAAC+B,MAAM;QAC7BrB,MAAM,EAAEA,MAAM;QACdF,SAAS,EAAEA,SAAS;QACpBkD,IAAI,EAAEA,IAAI;QACV9C,QAAQ,EAAEA,QAAQ;QAClBgD,cAAc,EAAEA;MAClB,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACI,IAAI,CAACC,OAAO,EAAE;QACzB/C,eAAe,CAAC0C,QAAQ,CAACI,IAAI,CAACE,OAAO,CAAC;QACtC9C,sBAAsB,CAAC,IAAI,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;IACAtB,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMqD,wBAAwB,GAAGA,CAAA,KAAM;IACrC,IAAIpE,OAAO,IAAII,QAAQ,EAAE;MACvB;MACA,MAAMiE,SAAS,GAAG,0CAA0C;MAC5DC,MAAM,CAACC,IAAI,CAACF,SAAS,EAAE,QAAQ,CAAC;;MAEhC;MACAG,KAAK,CAAC,8CAA8CxE,OAAO,CAAC2B,SAAS,GAAG3B,OAAO,CAACiC,KAAK,EAAE,CAAC;IAC1F,CAAC,MAAM;MACLuC,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAED,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMhF,aAAa,CAACiF,eAAe,CAAC;QAClC/C,SAAS,EAAE3B,OAAO,CAAC2B,SAAS;QAC5BE,YAAY,EAAE7B,OAAO,CAACiC,KAAK;QAC3BH,WAAW,EAAE9B,OAAO,CAACkC,IAAI;QACzB6B,WAAW,EAAE/D,OAAO,CAACgC,IAAI;QACzBgC,aAAa,EAAEhE,OAAO,CAAC+B;MACzB,CAAC,CAAC;MACFyC,KAAK,CAAC,kCAAkC,CAAC;IAC3C,CAAC,CAAC,OAAOnC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAMsC,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAI,CAACvE,QAAQ,EAAE;MACboE,KAAK,CAAC,8BAA8B,CAAC;MACrC;IACF;IAEAxB,SAAS,CAAC,CAAC;IACX,MAAMW,kBAAkB,CAACvD,QAAQ,CAAC;EACpC,CAAC;EAED,MAAMwE,gBAAgB,GAAGA,CAAA,KAAM;IAC7BzE,SAAS,CAAC,IAAI,CAAC;IACfE,WAAW,CAAC,EAAE,CAAC;IACfc,eAAe,CAAC,IAAI,CAAC;IACrBE,sBAAsB,CAAC,KAAK,CAAC;IAC7B4B,UAAU,CAAC,CAAC;IACZV,UAAU,CAAC,CAAC;EACd,CAAC;EAED,IAAIjC,OAAO,EAAE;IACX,oBAAOV,OAAA;MAAKiF,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1D;EAEA,oBACEtF,OAAA;IAAKiF,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjClF,OAAA;MAAKiF,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BlF,OAAA;QAAKiF,SAAS,EAAC,aAAa;QAAAC,QAAA,GACzB,CAAArD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE0D,MAAM,kBACXvF,OAAA;UAAKwF,GAAG,EAAE3D,IAAI,CAAC0D,MAAO;UAACE,GAAG,EAAE5D,IAAI,CAACS,IAAK;UAAC2C,SAAS,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CACjE,eACDtF,OAAA;UAAAkF,QAAA,gBACElF,OAAA;YAAAkF,QAAA,EAAI;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7BtF,OAAA;YAAAkF,QAAA,EAAG;UAA+C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENtF,OAAA;QAAKiF,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BlF,OAAA;UAAKiF,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BlF,OAAA;YAAMiF,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAClDtF,OAAA;YAAMiF,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAE5B,UAAU,CAAC1C,SAAS;UAAC;YAAAuE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD,CAAC,eACNtF,OAAA;UAAKiF,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAC5B9D,cAAc,gBACbpB,OAAA;YAAQ0F,OAAO,EAAEtC,SAAU;YAAC6B,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAE1D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,gBAETtF,OAAA;YAAQ0F,OAAO,EAAE/C,UAAW;YAACsC,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAEzD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT,eACDtF,OAAA;YAAQ0F,OAAO,EAAErC,UAAW;YAAC4B,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAE3D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENtF,OAAA;MAAKiF,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BlF,OAAA;QAAKiF,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BlF,OAAA,CAACL,cAAc;UAACS,OAAO,EAAEA;QAAQ;UAAA+E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAGpCtF,OAAA;UAAKiF,SAAS,EAAC,iBAAiB;UAAAC,QAAA,GAC7B9E,OAAO,iBACNJ,OAAA;YACE2F,IAAI,EAAE,6CAA6CvF,OAAO,CAAC2B,SAAS,IAAI3B,OAAO,CAACiC,KAAK,EAAG;YACxFuD,MAAM,EAAC,QAAQ;YACfC,GAAG,EAAC,qBAAqB;YACzBZ,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAC9B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACJ,eAEDtF,OAAA;YACE0F,OAAO,EAAElB,wBAAyB;YAClCS,SAAS,EAAC,iBAAiB;YAC3Ba,QAAQ,EAAE,CAACtF,QAAS;YAAA0E,QAAA,EACrB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAER9D,mBAAmB,iBAClBxB,OAAA;YAAQ0F,OAAO,EAAEb,cAAe;YAACI,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAE/D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAGNtF,OAAA;UAAKiF,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjClF,OAAA;YAAAkF,QAAA,EAAI;UAAqB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9BtF,OAAA;YACE+F,KAAK,EAAE/E,QAAS;YAChBgF,QAAQ,EAAGC,CAAC,IAAKhF,WAAW,CAACgF,CAAC,CAACL,MAAM,CAACG,KAAK,CAAE;YAC7Cd,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAE3BlF,OAAA;cAAQ+F,KAAK,EAAC,QAAQ;cAAAb,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACtCtF,OAAA;cAAQ+F,KAAK,EAAC,KAAK;cAAAb,QAAA,EAAC;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAChCtF,OAAA;cAAQ+F,KAAK,EAAC,MAAM;cAAAb,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAClCtF,OAAA;cAAQ+F,KAAK,EAAC,YAAY;cAAAb,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC9CtF,OAAA;cAAQ+F,KAAK,EAAC,GAAG;cAAAb,QAAA,EAAC;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAGNtF,OAAA;UAAKiF,SAAS,EAAC,iBAAiB;UAAAC,QAAA,eAC9BlF,OAAA;YAAAkF,QAAA,gBACElF,OAAA;cACEkG,IAAI,EAAC,UAAU;cACfC,OAAO,EAAErF,MAAO;cAChBkF,QAAQ,EAAGC,CAAC,IAAKlF,SAAS,CAACkF,CAAC,CAACL,MAAM,CAACO,OAAO;YAAE;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC,yBAEJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENtF,OAAA;QAAKiF,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5BlF,OAAA,CAACN,UAAU;UACTU,OAAO,EAAEA,OAAQ;UACjBgG,gBAAgB,EAAExC,oBAAqB;UACvCyC,gBAAgB,EAAEpF;QAAY;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAELhF,MAAM,iBACLN,OAAA;QAAKiF,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5BlF,OAAA,CAACJ,aAAa;UACZU,MAAM,EAAEA,MAAO;UACfwD,IAAI,EAAEtD,QAAS;UACfJ,OAAO,EAAEA,OAAQ;UACjBkG,YAAY,EAAEtB;QAAiB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpF,EAAA,CAtSID,YAAY;EAAA,QACOR,eAAe;AAAA;AAAA8G,EAAA,GADlCtG,YAAY;AAwSlB,eAAeA,YAAY;AAAC,IAAAsG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}