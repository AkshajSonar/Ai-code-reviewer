{"ast":null,"code":"var _jsxFileName = \"/Users/akshaj/Ai-code-reviewer/frontend/src/components/BookmarkManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { codeforcesAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookmarkManager = () => {\n  _s();\n  const [bookmarks, setBookmarks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchBookmarks();\n  }, []);\n  const fetchBookmarks = async () => {\n    try {\n      const response = await codeforcesAPI.getBookmarks();\n      setBookmarks(response.data.bookmarks || []);\n    } catch (error) {\n      console.error('Failed to fetch bookmarks:', error);\n    }\n    setLoading(false);\n  };\n  const removeBookmark = async (contestId, problemIndex) => {\n    try {\n      await codeforcesAPI.removeBookmark(contestId, problemIndex);\n      setBookmarks(bookmarks.filter(b => !(b.contestId === contestId && b.problemIndex === problemIndex)));\n    } catch (error) {\n      console.error('Failed to remove bookmark:', error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading bookmarks...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bookmark-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Bookmarked Problems\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), bookmarks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No bookmarks yet. Bookmark problems to see them here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookmarks-list\",\n      children: bookmarks.map(bookmark => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookmark-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookmark-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: bookmark.problemName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", bookmark.problemRating, \" \\u2022 \", bookmark.problemTags.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookmark-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://codeforces.com/problemset/problem/${bookmark.contestId}/${bookmark.problemIndex}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"btn btn-secondary\",\n            children: \"Solve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeBookmark(bookmark.contestId, bookmark.problemIndex),\n            className: \"btn btn-danger\",\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, `${bookmark.contestId}-${bookmark.problemIndex}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(BookmarkManager, \"RkeKPusm9QFlx9l3bKwYgL3DYR0=\");\n_c = BookmarkManager;\nexport default BookmarkManager;\nvar _c;\n$RefreshReg$(_c, \"BookmarkManager\");","map":{"version":3,"names":["React","useState","useEffect","codeforcesAPI","jsxDEV","_jsxDEV","BookmarkManager","_s","bookmarks","setBookmarks","loading","setLoading","fetchBookmarks","response","getBookmarks","data","error","console","removeBookmark","contestId","problemIndex","filter","b","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","bookmark","problemName","problemRating","problemTags","join","href","target","rel","onClick","_c","$RefreshReg$"],"sources":["/Users/akshaj/Ai-code-reviewer/frontend/src/components/BookmarkManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { codeforcesAPI } from '../services/api';\n\nconst BookmarkManager = () => {\n  const [bookmarks, setBookmarks] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchBookmarks();\n  }, []);\n\n  const fetchBookmarks = async () => {\n    try {\n      const response = await codeforcesAPI.getBookmarks();\n      setBookmarks(response.data.bookmarks || []);\n    } catch (error) {\n      console.error('Failed to fetch bookmarks:', error);\n    }\n    setLoading(false);\n  };\n\n  const removeBookmark = async (contestId, problemIndex) => {\n    try {\n      await codeforcesAPI.removeBookmark(contestId, problemIndex);\n      setBookmarks(bookmarks.filter(b => \n        !(b.contestId === contestId && b.problemIndex === problemIndex)\n      ));\n    } catch (error) {\n      console.error('Failed to remove bookmark:', error);\n    }\n  };\n\n  if (loading) return <div>Loading bookmarks...</div>;\n\n  return (\n    <div className=\"bookmark-manager\">\n      <h3>Bookmarked Problems</h3>\n      \n      {bookmarks.length === 0 ? (\n        <p>No bookmarks yet. Bookmark problems to see them here.</p>\n      ) : (\n        <div className=\"bookmarks-list\">\n          {bookmarks.map(bookmark => (\n            <div key={`${bookmark.contestId}-${bookmark.problemIndex}`} className=\"bookmark-item\">\n              <div className=\"bookmark-info\">\n                <h4>{bookmark.problemName}</h4>\n                <p>Rating: {bookmark.problemRating} â€¢ {bookmark.problemTags.join(', ')}</p>\n              </div>\n              <div className=\"bookmark-actions\">\n                <a\n                  href={`https://codeforces.com/problemset/problem/${bookmark.contestId}/${bookmark.problemIndex}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"btn btn-secondary\"\n                >\n                  Solve\n                </a>\n                <button\n                  onClick={() => removeBookmark(bookmark.contestId, bookmark.problemIndex)}\n                  className=\"btn btn-danger\"\n                >\n                  Remove\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BookmarkManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}