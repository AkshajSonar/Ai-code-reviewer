{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { codeforcesAPI } from '../services/api';\n\n// const BookmarkManager = () => {\n//   const [bookmarks, setBookmarks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     fetchBookmarks();\n//   }, []);\n\n//   const fetchBookmarks = async () => {\n//     try {\n//       const response = await codeforcesAPI.getBookmarks();\n//       setBookmarks(response.data.bookmarks || []);\n//     } catch (error) {\n//       console.error('Failed to fetch bookmarks:', error);\n//     }\n//     setLoading(false);\n//   };\n\n//   const removeBookmark = async (contestId, problemIndex) => {\n//     try {\n//       await codeforcesAPI.removeBookmark(contestId, problemIndex);\n//       setBookmarks(bookmarks.filter(b => \n//         !(b.contestId === contestId && b.problemIndex === problemIndex)\n//       ));\n//     } catch (error) {\n//       console.error('Failed to remove bookmark:', error);\n//     }\n//   };\n\n//   if (loading) return <div>Loading bookmarks...</div>;\n\n//   return (\n//     <div className=\"bookmark-manager\">\n//       <h3>Bookmarked Problems</h3>\n\n//       {bookmarks.length === 0 ? (\n//         <p>No bookmarks yet. Bookmark problems to see them here.</p>\n//       ) : (\n//         <div className=\"bookmarks-list\">\n//           {bookmarks.map(bookmark => (\n//             <div key={`${bookmark.contestId}-${bookmark.problemIndex}`} className=\"bookmark-item\">\n//               <div className=\"bookmark-info\">\n//                 <h4>{bookmark.problemName}</h4>\n//                 <p>Rating: {bookmark.problemRating} • {bookmark.problemTags.join(', ')}</p>\n//               </div>\n//               <div className=\"bookmark-actions\">\n//                 <a\n//                   href={`https://codeforces.com/problemset/problem/${bookmark.contestId}/${bookmark.problemIndex}`}\n//                   target=\"_blank\"\n//                   rel=\"noopener noreferrer\"\n//                   className=\"btn btn-secondary\"\n//                 >\n//                   Solve\n//                 </a>\n//                 <button\n//                   onClick={() => removeBookmark(bookmark.contestId, bookmark.problemIndex)}\n//                   className=\"btn btn-danger\"\n//                 >\n//                   Remove\n//                 </button>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default BookmarkManager;","map":{"version":3,"names":[],"sources":["/Users/akshaj/Ai-code-reviewer/frontend/src/components/BookmarkManager.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { codeforcesAPI } from '../services/api';\n\n// const BookmarkManager = () => {\n//   const [bookmarks, setBookmarks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     fetchBookmarks();\n//   }, []);\n\n//   const fetchBookmarks = async () => {\n//     try {\n//       const response = await codeforcesAPI.getBookmarks();\n//       setBookmarks(response.data.bookmarks || []);\n//     } catch (error) {\n//       console.error('Failed to fetch bookmarks:', error);\n//     }\n//     setLoading(false);\n//   };\n\n//   const removeBookmark = async (contestId, problemIndex) => {\n//     try {\n//       await codeforcesAPI.removeBookmark(contestId, problemIndex);\n//       setBookmarks(bookmarks.filter(b => \n//         !(b.contestId === contestId && b.problemIndex === problemIndex)\n//       ));\n//     } catch (error) {\n//       console.error('Failed to remove bookmark:', error);\n//     }\n//   };\n\n//   if (loading) return <div>Loading bookmarks...</div>;\n\n//   return (\n//     <div className=\"bookmark-manager\">\n//       <h3>Bookmarked Problems</h3>\n      \n//       {bookmarks.length === 0 ? (\n//         <p>No bookmarks yet. Bookmark problems to see them here.</p>\n//       ) : (\n//         <div className=\"bookmarks-list\">\n//           {bookmarks.map(bookmark => (\n//             <div key={`${bookmark.contestId}-${bookmark.problemIndex}`} className=\"bookmark-item\">\n//               <div className=\"bookmark-info\">\n//                 <h4>{bookmark.problemName}</h4>\n//                 <p>Rating: {bookmark.problemRating} • {bookmark.problemTags.join(', ')}</p>\n//               </div>\n//               <div className=\"bookmark-actions\">\n//                 <a\n//                   href={`https://codeforces.com/problemset/problem/${bookmark.contestId}/${bookmark.problemIndex}`}\n//                   target=\"_blank\"\n//                   rel=\"noopener noreferrer\"\n//                   className=\"btn btn-secondary\"\n//                 >\n//                   Solve\n//                 </a>\n//                 <button\n//                   onClick={() => removeBookmark(bookmark.contestId, bookmark.problemIndex)}\n//                   className=\"btn btn-danger\"\n//                 >\n//                   Remove\n//                 </button>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default BookmarkManager;\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}