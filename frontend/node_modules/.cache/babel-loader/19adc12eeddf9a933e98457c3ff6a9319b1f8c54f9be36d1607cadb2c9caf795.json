{"ast":null,"code":"var _jsxFileName = \"/Users/akshaj/Ai-code-reviewer/frontend/src/pages/ProblemSolve.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport CodeEditor from '../components/CodeEditor';\nimport ProblemDisplay from '../components/ProblemDisplay';\nimport ReviewResults from '../components/ReviewResults';\nimport { codeforcesAPI } from '../services/api';\nimport { getUser } from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProblemSolve = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const [problem, setProblem] = useState(null);\n  const [review, setReview] = useState(null);\n  const [userCode, setUserCode] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [timeTaken, setTimeTaken] = useState(0);\n  const [problemRating, setProblemRating] = useState(1500);\n  const [solved, setSolved] = useState(false);\n  const [language, setLanguage] = useState('python');\n  const [submitting, setSubmitting] = useState(false);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [selectedRating, setSelectedRating] = useState(1500);\n  const timerRef = useRef(null);\n  const startTimeRef = useRef(null);\n  const user = getUser();\n  useEffect(() => {\n    const fetchProblem = async () => {\n      const contestId = searchParams.get('contestId');\n      const problemIndex = searchParams.get('index');\n      const problemName = searchParams.get('problem');\n      const rating = searchParams.get('rating');\n      if (contestId && problemIndex) {\n        setLoading(true);\n        try {\n          setProblem({\n            contestId,\n            index: problemIndex,\n            name: problemName || `Problem ${contestId}${problemIndex}`,\n            tags: searchParams.get('tags') ? searchParams.get('tags').split(',') : ['algorithm'],\n            rating: parseInt(rating) || 1500\n          });\n          setProblemRating(parseInt(rating) || 1500);\n        } catch (error) {\n          console.error('Failed to fetch problem:', error);\n        }\n        setLoading(false);\n      }\n    };\n    fetchProblem();\n\n    // Start timer automatically when component mounts\n    startTimer();\n\n    // Cleanup timer on unmount\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [searchParams]);\n\n  // Timer functions\n  const startTimer = () => {\n    if (!isTimerRunning) {\n      startTimeRef.current = Date.now();\n      setIsTimerRunning(true);\n      timerRef.current = setInterval(() => {\n        const elapsedSeconds = Math.floor((Date.now() - startTimeRef.current) / 1000);\n        setTimeTaken(elapsedSeconds);\n      }, 1000);\n    }\n  };\n  const stopTimer = () => {\n    if (isTimerRunning && timerRef.current) {\n      clearInterval(timerRef.current);\n      setIsTimerRunning(false);\n      const finalTime = Math.floor((Date.now() - startTimeRef.current) / 1000);\n      setTimeTaken(finalTime);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const handleReviewComplete = async (reviewText, code) => {\n    stopTimer(); // Stop timer when review is complete\n    setReview(reviewText);\n    setUserCode(code);\n    if (problem) {\n      await saveProblemAttempt(code, reviewText);\n    }\n  };\n  const saveProblemAttempt = async (code, reviewFeedback = '') => {\n    if (!problem) return;\n    setSubmitting(true);\n    try {\n      await codeforcesAPI.saveAttempt({\n        contestId: problem.contestId,\n        problemIndex: problem.index,\n        problemName: problem.name,\n        problemTags: problem.tags,\n        problemRating: problemRating,\n        solved: solved,\n        timeTaken: Math.floor(timeTaken / 60),\n        // Convert to minutes\n        code: code,\n        language: language,\n        reviewFeedback: reviewFeedback\n      });\n      console.log('Problem attempt saved successfully!');\n    } catch (error) {\n      console.error('Failed to save attempt:', error);\n    }\n    setSubmitting(false);\n  };\n  const handleSaveWithoutReview = async () => {\n    if (!userCode) {\n      alert('Please write some code first');\n      return;\n    }\n    stopTimer(); // Stop timer when saving without review\n    await saveProblemAttempt(userCode);\n    alert('Your solution has been saved!');\n  };\n  const handleTryAnother = () => {\n    setReview(null);\n    setUserCode('');\n    window.location.href = '/';\n  };\n  const handleGetNewProblem = () => {\n    // Redirect to dashboard with selected rating\n    window.location.href = `/?rating=${selectedRating}`;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading problem...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"problem-solve-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solve-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-user\",\n        children: [(user === null || user === void 0 ? void 0 : user.avatar) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.avatar,\n          alt: user.name,\n          className: \"user-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Solve Coding Problem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Write your solution and get instant AI feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timer-label\",\n            children: \"Time Elapsed:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timer-value\",\n            children: formatTime(timeTaken)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-controls\",\n          children: isTimerRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: stopTimer,\n            className: \"btn btn-secondary\",\n            children: \"\\u23F9\\uFE0F Stop Timer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startTimer,\n            className: \"btn btn-primary\",\n            children: \"\\u25B6\\uFE0F Start Timer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solve-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem-column\",\n        children: [/*#__PURE__*/_jsxDEV(ProblemDisplay, {\n          problem: problem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-selection\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Get New Problem by Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select Problem Difficulty Rating:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rating-slider\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"800\",\n                max: \"3500\",\n                step: \"100\",\n                value: selectedRating,\n                onChange: e => setSelectedRating(parseInt(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"rating-value\",\n                children: selectedRating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleGetNewProblem,\n              className: \"btn btn-primary\",\n              children: [\"Get \", selectedRating, \" Rated Problem\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"solution-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Solution Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meta-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Time Taken: \", formatTime(timeTaken)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-display\",\n                children: [Math.floor(timeTaken / 60), \" minutes \", timeTaken % 60, \" seconds\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"problemRating\",\n                children: \"Problem Difficulty Rating:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"problemRating\",\n                type: \"number\",\n                value: problemRating,\n                onChange: e => setProblemRating(Math.max(800, Math.min(3500, parseInt(e.target.value) || 1500))),\n                min: \"800\",\n                max: \"3500\",\n                step: \"100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group checkbox-group\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: solved,\n                  onChange: e => setSolved(e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this), \"I solved this problem\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"language\",\n                children: \"Programming Language:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"language\",\n                value: language,\n                onChange: e => setLanguage(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"python\",\n                  children: \"Python\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"javascript\",\n                  children: \"JavaScript\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"java\",\n                  children: \"Java\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"cpp\",\n                  children: \"C++\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"c\",\n                  children: \"C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meta-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveWithoutReview,\n              disabled: submitting || !userCode,\n              className: \"btn btn-secondary\",\n              children: submitting ? 'Saving...' : 'Save Without AI Review'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-column\",\n        children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n          problem: problem,\n          onReviewComplete: handleReviewComplete,\n          onLanguageChange: setLanguage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), review && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-column\",\n        children: /*#__PURE__*/_jsxDEV(ReviewResults, {\n          review: review,\n          code: userCode,\n          problem: problem,\n          onTryAnother: handleTryAnother\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(ProblemSolve, \"Z9QZJFThE8PDsAooKckjzAsvFk4=\", false, function () {\n  return [useSearchParams];\n});\n_c = ProblemSolve;\nexport default ProblemSolve;\nvar _c;\n$RefreshReg$(_c, \"ProblemSolve\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSearchParams","CodeEditor","ProblemDisplay","ReviewResults","codeforcesAPI","getUser","jsxDEV","_jsxDEV","ProblemSolve","_s","searchParams","problem","setProblem","review","setReview","userCode","setUserCode","loading","setLoading","timeTaken","setTimeTaken","problemRating","setProblemRating","solved","setSolved","language","setLanguage","submitting","setSubmitting","isTimerRunning","setIsTimerRunning","selectedRating","setSelectedRating","timerRef","startTimeRef","user","fetchProblem","contestId","get","problemIndex","problemName","rating","index","name","tags","split","parseInt","error","console","startTimer","current","clearInterval","Date","now","setInterval","elapsedSeconds","Math","floor","stopTimer","finalTime","formatTime","seconds","mins","secs","toString","padStart","handleReviewComplete","reviewText","code","saveProblemAttempt","reviewFeedback","saveAttempt","problemTags","log","handleSaveWithoutReview","alert","handleTryAnother","window","location","href","handleGetNewProblem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","avatar","src","alt","onClick","type","min","max","step","value","onChange","e","target","htmlFor","id","checked","disabled","onReviewComplete","onLanguageChange","onTryAnother","_c","$RefreshReg$"],"sources":["/Users/akshaj/Ai-code-reviewer/frontend/src/pages/ProblemSolve.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport CodeEditor from '../components/CodeEditor';\nimport ProblemDisplay from '../components/ProblemDisplay';\nimport ReviewResults from '../components/ReviewResults';\nimport { codeforcesAPI } from '../services/api';\nimport { getUser } from '../services/auth';\n\nconst ProblemSolve = () => {\n  const [searchParams] = useSearchParams();\n  const [problem, setProblem] = useState(null);\n  const [review, setReview] = useState(null);\n  const [userCode, setUserCode] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [timeTaken, setTimeTaken] = useState(0);\n  const [problemRating, setProblemRating] = useState(1500);\n  const [solved, setSolved] = useState(false);\n  const [language, setLanguage] = useState('python');\n  const [submitting, setSubmitting] = useState(false);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [selectedRating, setSelectedRating] = useState(1500);\n  const timerRef = useRef(null);\n  const startTimeRef = useRef(null);\n  const user = getUser();\n\n  useEffect(() => {\n    const fetchProblem = async () => {\n      const contestId = searchParams.get('contestId');\n      const problemIndex = searchParams.get('index');\n      const problemName = searchParams.get('problem');\n      const rating = searchParams.get('rating');\n\n      if (contestId && problemIndex) {\n        setLoading(true);\n        try {\n          setProblem({\n            contestId,\n            index: problemIndex,\n            name: problemName || `Problem ${contestId}${problemIndex}`,\n            tags: searchParams.get('tags') ? searchParams.get('tags').split(',') : ['algorithm'],\n            rating: parseInt(rating) || 1500\n          });\n          setProblemRating(parseInt(rating) || 1500);\n        } catch (error) {\n          console.error('Failed to fetch problem:', error);\n        }\n        setLoading(false);\n      }\n    };\n\n    fetchProblem();\n    \n    // Start timer automatically when component mounts\n    startTimer();\n    \n    // Cleanup timer on unmount\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [searchParams]);\n\n  // Timer functions\n  const startTimer = () => {\n    if (!isTimerRunning) {\n      startTimeRef.current = Date.now();\n      setIsTimerRunning(true);\n      \n      timerRef.current = setInterval(() => {\n        const elapsedSeconds = Math.floor((Date.now() - startTimeRef.current) / 1000);\n        setTimeTaken(elapsedSeconds);\n      }, 1000);\n    }\n  };\n\n  const stopTimer = () => {\n    if (isTimerRunning && timerRef.current) {\n      clearInterval(timerRef.current);\n      setIsTimerRunning(false);\n      const finalTime = Math.floor((Date.now() - startTimeRef.current) / 1000);\n      setTimeTaken(finalTime);\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const handleReviewComplete = async (reviewText, code) => {\n    stopTimer(); // Stop timer when review is complete\n    setReview(reviewText);\n    setUserCode(code);\n    \n    if (problem) {\n      await saveProblemAttempt(code, reviewText);\n    }\n  };\n\n  const saveProblemAttempt = async (code, reviewFeedback = '') => {\n    if (!problem) return;\n\n    setSubmitting(true);\n    try {\n      await codeforcesAPI.saveAttempt({\n        contestId: problem.contestId,\n        problemIndex: problem.index,\n        problemName: problem.name,\n        problemTags: problem.tags,\n        problemRating: problemRating,\n        solved: solved,\n        timeTaken: Math.floor(timeTaken / 60), // Convert to minutes\n        code: code,\n        language: language,\n        reviewFeedback: reviewFeedback\n      });\n      console.log('Problem attempt saved successfully!');\n    } catch (error) {\n      console.error('Failed to save attempt:', error);\n    }\n    setSubmitting(false);\n  };\n\n  const handleSaveWithoutReview = async () => {\n    if (!userCode) {\n      alert('Please write some code first');\n      return;\n    }\n    \n    stopTimer(); // Stop timer when saving without review\n    await saveProblemAttempt(userCode);\n    alert('Your solution has been saved!');\n  };\n\n  const handleTryAnother = () => {\n    setReview(null);\n    setUserCode('');\n    window.location.href = '/';\n  };\n\n  const handleGetNewProblem = () => {\n    // Redirect to dashboard with selected rating\n    window.location.href = `/?rating=${selectedRating}`;\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading problem...</div>;\n  }\n\n  return (\n    <div className=\"problem-solve-page\">\n      <div className=\"solve-header\">\n        <div className=\"header-user\">\n          {user?.avatar && (\n            <img src={user.avatar} alt={user.name} className=\"user-avatar\" />\n          )}\n          <div>\n            <h1>Solve Coding Problem</h1>\n            <p>Write your solution and get instant AI feedback</p>\n          </div>\n        </div>\n        \n        <div className=\"timer-section\">\n          <div className=\"timer-display\">\n            <span className=\"timer-label\">Time Elapsed:</span>\n            <span className=\"timer-value\">{formatTime(timeTaken)}</span>\n          </div>\n          <div className=\"timer-controls\">\n            {isTimerRunning ? (\n              <button onClick={stopTimer} className=\"btn btn-secondary\">\n                ⏹️ Stop Timer\n              </button>\n            ) : (\n              <button onClick={startTimer} className=\"btn btn-primary\">\n                ▶️ Start Timer\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"solve-content\">\n        <div className=\"problem-column\">\n          <ProblemDisplay problem={problem} />\n          \n          {/* Problem Rating Selection for New Problem */}\n          <div className=\"rating-selection\">\n            <h3>Get New Problem by Rating</h3>\n            <div className=\"rating-input-group\">\n              <label>Select Problem Difficulty Rating:</label>\n              <div className=\"rating-slider\">\n                <input\n                  type=\"range\"\n                  min=\"800\"\n                  max=\"3500\"\n                  step=\"100\"\n                  value={selectedRating}\n                  onChange={(e) => setSelectedRating(parseInt(e.target.value))}\n                />\n                <span className=\"rating-value\">{selectedRating}</span>\n              </div>\n              <button onClick={handleGetNewProblem} className=\"btn btn-primary\">\n                Get {selectedRating} Rated Problem\n              </button>\n            </div>\n          </div>\n\n          {/* Solution Metadata Form */}\n          <div className=\"solution-meta\">\n            <h3>Solution Details</h3>\n            <div className=\"meta-form\">\n              <div className=\"form-group\">\n                <label>Time Taken: {formatTime(timeTaken)}</label>\n                <div className=\"time-display\">\n                  {Math.floor(timeTaken / 60)} minutes {timeTaken % 60} seconds\n                </div>\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"problemRating\">Problem Difficulty Rating:</label>\n                <input\n                  id=\"problemRating\"\n                  type=\"number\"\n                  value={problemRating}\n                  onChange={(e) => setProblemRating(Math.max(800, Math.min(3500, parseInt(e.target.value) || 1500)))}\n                  min=\"800\"\n                  max=\"3500\"\n                  step=\"100\"\n                />\n              </div>\n              \n              <div className=\"form-group checkbox-group\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={solved}\n                    onChange={(e) => setSolved(e.target.checked)}\n                  />\n                  I solved this problem\n                </label>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"language\">Programming Language:</label>\n                <select\n                  id=\"language\"\n                  value={language}\n                  onChange={(e) => setLanguage(e.target.value)}\n                >\n                  <option value=\"python\">Python</option>\n                  <option value=\"javascript\">JavaScript</option>\n                  <option value=\"java\">Java</option>\n                  <option value=\"cpp\">C++</option>\n                  <option value=\"c\">C</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"meta-actions\">\n              <button \n                onClick={handleSaveWithoutReview}\n                disabled={submitting || !userCode}\n                className=\"btn btn-secondary\"\n              >\n                {submitting ? 'Saving...' : 'Save Without AI Review'}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"editor-column\">\n          <CodeEditor \n            problem={problem}\n            onReviewComplete={handleReviewComplete}\n            onLanguageChange={setLanguage}\n          />\n        </div>\n\n        {review && (\n          <div className=\"review-column\">\n            <ReviewResults \n              review={review}\n              code={userCode}\n              problem={problem}\n              onTryAnother={handleTryAnother}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProblemSolve;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}